apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-celery-statefulset
spec:
  replicas: {{ .Values.redis.cache.replicas }}
  selector:
    matchLabels:
      app: redis-celery
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: redis-celery-data-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: do-block-storage-xfs-retain
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        app: redis-celery
      annotations:
        helm.sh/revision: "{{ .Release.Revision }}"
    spec:
      volumes:
        - name: configs
          configMap:
            name: redis-celery-configs
      containers:
        - name: redis-celery
          image: {{ .Values.redis.image }}
          ports: {{- include "ports" .Values.redis.ports | indent 12 }}
          volumeMounts: {{- include "configs" .Values.redis.celery.configs | indent 12 }}
            - name: redis-celery-data-pvc
              mountPath: /data
          resources: {{- toYaml .Values.redis.celery.resources | nindent 12 }}
          livenessProbe: {{- tpl (toYaml .Values.redis.probe) . | nindent 12 }}
          readinessProbe: {{- tpl (toYaml .Values.redis.probe) . | nindent 12 }}
