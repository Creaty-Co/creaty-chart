apiVersion: apps/v1
kind: Deployment
metadata:
  name: cbeat-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cbeat
  template:
    metadata:
      labels:
        app: cbeat
      annotations:
        helm.sh/revision: "{{ .Release.Revision }}"
    spec:
      initContainers:
        - name: wait-for-redis-celery
          image: redis:alpine
          command:
            - sh
            - -c
            - |
              retries=0
              max_retries=10
              timeout=3
              while [ "$retries" -lt "$max_retries" ]; do
                echo "Attempt $retries of $max_retries"
                retries=$((retries + 1))
                if redis-cli -h redis-celery -p 6379 ping; then
                  exit 0
                else
                  echo "Failed to connect to Redis, retrying in $timeout seconds..."
                  sleep "$timeout"
                fi
              done
              echo "Failed to connect to Redis after $max_retries retries, exiting"
              exit 1
        - name: wait-for-postgres
          image: postgres:alpine
          command:
        	- sh
        	- -c
        	- |
        	  retries=0
        	  max_retries=15
        	  timeout=6
        	  while [ "$retries" -lt "$max_retries" ]; do
        		echo "Attempt $retries of $max_retries"
        		retries=$((retries + 1))
        		if pg_isready -h postgres -p 5432; then
        		  exit 0
        		else
        		  echo "Failed to connect to Postgres, retrying in $timeout seconds..."
        		  sleep "$timeout"
        		fi
        	  done
        	  echo "Failed to connect to Postgres after $max_retries retries, exiting"
        	  exit 1
      containers:
        - name: cbeat
          image: {{ .Values.api.image }}
          command: [ celery, -A, api, beat, -S, django, -l, info ]
          env: {{- include "env" (dict "_" $ "_envs" .Values.api.envs) | indent 12 }}
          resources: {{- toYaml .Values.api.cbeat.resources | nindent 12 }}
